@page "/exercises/add"
@page "/exercises/edit/{ExerciseId:int}"
@using Microsoft.AspNetCore.Authorization
@using SmartWorkout.Entities
@rendermode InteractiveServer
@attribute [Authorize(Roles = "Administrator")]
<Div Margin="Margin.IsAuto.OnX" style="background:url(bootstrap/background.jpg);background-size:cover;opacity:90%;height:90vh">

	<EditForm Model="Exercise" OnValidSubmit="@SaveCurrentExercise">
		<DataAnnotationsValidator />
		<Div Padding="Padding.Is3" Margin="Margin.IsAuto.OnX" Style="width:33%">

			<Card Margin="Margin.Is5.FromTop" Shadow="Shadow.Default">
				<CardBody>
					@if (ExerciseId != null)
					{
						<Heading Size="HeadingSize.Is2" Margin="Margin.Is3.FromBottom.Is3.FromTop" TextAlignment="TextAlignment.Center">
							Edit exercise
						</Heading>
					}
					else
					{
						<Heading Size="HeadingSize.Is2" Margin="Margin.Is3.FromBottom.Is3.FromTop" TextAlignment="TextAlignment.Center">
							Create new exercise
						</Heading>
					}
					

					<Field>
						<FieldLabel>
							Exercise Description
						</FieldLabel>
						<FieldBody>
							<TextEdit Placeholder="e.g. Push-ups" @bind-Text="Exercise.Description"/>
							<ValidationMessage For="@(() => Exercise.Description)"/>
						</FieldBody>
					</Field>

					<Field>
						<FieldLabel>
							Type
						</FieldLabel>
						<FieldBody>
							<TextEdit Placeholder="e.g. Chan" @bind-Text="Exercise.Type"/>
							<ValidationMessage For="@(() => Exercise.Type)"/>
						</FieldBody>
					</Field>

					<Field>
						<Button Type="ButtonType.Submit" Color="Color.Primary" Block>
							Save
						</Button>
					</Field>


				</CardBody>
			</Card>
		</Div>
	</EditForm>
</Div>
