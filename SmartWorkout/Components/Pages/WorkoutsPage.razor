@page "/workouts/{UserId:int?}"

@using SmartWorkout.Entities
@rendermode InteractiveServer
@if (UserId != null)
{
	<Heading Size="HeadingSize.Is2" Padding="Padding.Is3" TextAlignment="TextAlignment.Center">@User.FirstName @User.LastName`s workouts</Heading>
}
else
{
	<Heading Size="HeadingSize.Is2" Padding="Padding.Is3" TextAlignment="TextAlignment.Center">All workouts</Heading>
}

<DataGrid TItem="Workout"
		  Data="@Workouts"
		  Filterable
		  FilterMode="DataGridFilterMode.Menu"
		  Responsive
		  Editable>
	<DataGridColumn TItem="Workout" Field="Name" Caption="Name"></DataGridColumn>
	<DataGridColumn TItem="Workout" Field="Date" DisplayFormat="{0:MM/dd/yyyy}" Caption="Date"></DataGridColumn>


	@if (UserId != null)
	{

	}
	else
	{

		<DataGridColumn TItem="Workout" Field="User.FirstName" Caption="User">
			<DisplayTemplate>
				@{
					var user = (context as Workout)?.User;

					if (user != null)
					{
						@($"{user.FirstName} {user.LastName}")
					}
				}
			</DisplayTemplate>
		</DataGridColumn>
	}



	<DataGridCommandColumn TItem="Workout" DeleteCommandAllowed="false" NewCommandAllowed="@UserIdIsPresent">
		<NewCommandTemplate>
			@if (CurrentUser.isAdmin)
			{
				<Button Color="Color.Primary" Clicked="() => AddWorkout()">
					<Icon Name="IconName.Add"></Icon>
					Add new Workout
				</Button>
			}

		</NewCommandTemplate>
		<EditCommandTemplate>
			<Button Color="Color.Dark" Clicked="() => EditWorkout(context)">View workout</Button>
			@if (CurrentUser.isAdmin)
			{
				<Button Color="Color.Danger" Clicked="() => OnDeleteButtonClicked(context)">Delete</Button>
			}
			
		</EditCommandTemplate>
	</DataGridCommandColumn>

</DataGrid>

<DeleteConfirmationDialog @ref="DeleteConfirmation" OnConfirm="HandleDeleteConfirmed"></DeleteConfirmationDialog>