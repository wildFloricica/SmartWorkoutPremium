@using Microsoft.AspNetCore.Authorization
@using SmartWorkout.Entities
@using SmartWorkout.ExtensionMethod
@page "/users/add"
@page "/users/edit/{UserId:int}"
@rendermode InteractiveServer
@attribute [Authorize(Roles = "Administrator")]
<Div Margin="Margin.IsAuto.OnX" style="background:url(bootstrap/background.jpg);background-size:cover;opacity:90%;height:90vh">

	<EditForm EditContext="EditContext" OnValidSubmit="@SaveCurrentUser">
		<DataAnnotationsValidator />
		<Div Padding="Padding.Is3" Margin="Margin.IsAuto.OnX" Style="width:33%">

			<Card Margin="Margin.Is5.FromTop" Shadow="Shadow.Default">
				<CardBody>
					@if (UserId != null)
					{
						<Heading Size="HeadingSize.Is2" Margin="Margin.Is3.FromBottom.Is3.FromTop" TextAlignment="TextAlignment.Center">
							Edit user
						</Heading>
					}
					else
					{
						<Heading Size="HeadingSize.Is2" Margin="Margin.Is3.FromBottom.Is3.FromTop" TextAlignment="TextAlignment.Center">
							Create new user
						</Heading>
					}
					

					<Field>
						<FieldLabel>
							First Name
						</FieldLabel>
						<FieldBody>
							<TextEdit Placeholder="e.g. Jackie" @bind-Text="User.FirstName"/>
							<ValidationMessage For="@(() => User.FirstName)"/>
						</FieldBody>
					</Field>

					<Field>
						<FieldLabel>
							Last Name
						</FieldLabel>
						<FieldBody>
							<TextEdit Placeholder="e.g. Chan" @bind-Text="User.LastName"/>
							<ValidationMessage For="@(() => User.LastName)"/>
						</FieldBody>
					</Field>

					<Field>
						<FieldLabel>
							Email
						</FieldLabel>
						<FieldBody>
							<TextEdit Role="TextRole.Email" Placeholder="e.g. example@smartworkout.com" @bind-Text="User.Email"/>
							<ValidationMessage For="@(() => User.Email)"/>
						</FieldBody>
					</Field>

					<Field>
						<FieldLabel>
							Birthday
						</FieldLabel>
						<FieldBody>
							<DateEdit @bind-Date="User.Birthday"/>
							<ValidationMessage For="@(() => User.Birthday)"/>
						</FieldBody>
					</Field>

					<Field>
						<FieldLabel>
							Gender
							<FieldBody>
								<Select @bind-SelectedValue="@User.Gender">
									@foreach (Gender gender in Enum.GetValues(typeof(Gender)))
									{
										<SelectItem Value="@gender">@gender.GetEnumDescription()</SelectItem>
									}
								</Select>
							</FieldBody>
						</FieldLabel>
					</Field>


					<Field>
						<Button Type="ButtonType.Submit" Color="Color.Primary" Block>
							Save
						</Button>
					</Field>


				</CardBody>
			</Card>
		</Div>
	</EditForm>
</Div>
